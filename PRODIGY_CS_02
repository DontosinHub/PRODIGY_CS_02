from PIL import Image

# Function to encrypt the image
def encrypt_image(image_path, shift_value, output_path):
    # Open the image
    img = Image.open(image_path)
    img = img.convert('RGB')  # Ensure image is in RGB mode
    pixels = img.load()  # Access pixel data
    
    # Iterate over each pixel and modify its value
    for i in range(img.width):
        for j in range(img.height):
            r, g, b = pixels[i, j]
            pixels[i, j] = ((r + shift_value) % 256, (g + shift_value) % 256, (b + shift_value) % 256)
    
    # Save the encrypted image
    img.save(output_path)
    print(f"Encrypted image saved as {output_path}")

# Function to decrypt the image
def decrypt_image(image_path, shift_value, output_path):
    # Open the image
    img = Image.open(image_path)
    img = img.convert('RGB')  # Ensure image is in RGB mode
    pixels = img.load()  # Access pixel data
    
    # Iterate over each pixel and revert its value
    for i in range(img.width):
        for j in range(img.height):
            r, g, b = pixels[i, j]
            pixels[i, j] = ((r - shift_value) % 256, (g - shift_value) % 256, (b - shift_value) % 256)
    
    # Save the decrypted image
    img.save(output_path)
    print(f"Decrypted image saved as {output_path}")

# Example usage
if __name__ == '__main__':
    # Encrypt the image
    encrypt_image('input_image.jpg', shift_value=50, output_path='encrypted_image.jpg')

    # Decrypt the image
    decrypt_image('encrypted_image.jpg', shift_value=50, output_path='decrypted_image.jpg')
